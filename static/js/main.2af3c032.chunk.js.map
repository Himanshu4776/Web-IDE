{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","constants.js","App.js","reportWebVitals.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","htmlStarter","cssStarter","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAmDeA,MAzCf,SAAgBC,GACZ,IACIC,EAIAD,EAJAC,SACAC,EAGAF,EAHAE,YACAC,EAEAH,EAFAG,MACAC,EACAJ,EADAI,SAEJ,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OACI,sBAAKC,UAAS,2BAAsBF,EAAO,GAAK,aAAhD,UACI,sBAAKE,UAAU,eAAf,UACKN,EACD,wBACAO,KAAK,SACLD,UAAU,sBACNE,QAAS,kBAAIH,GAAQ,SAAAI,GAAQ,OAAKA,MAHtC,SAKI,cAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,WAGtD,cAAC,aAAD,CACIC,eAjBZ,SAAsBC,EAAQC,EAAMd,GAEhCC,EAASD,IAgBDA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAMpB,EACNqB,MAAO,WACPC,aAAa,SCvClB,SAASC,EAAgBC,EAAKC,GACzC,IAAMC,EAHK,WAGkBF,EAC7B,EAA0BpB,oBAAS,WAC/B,IAAMuB,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EACOG,KAAKC,MAAMJ,GAGM,oBAAjBF,EACAA,IAEAA,KATf,mBAAOvB,EAAP,KAAc8B,EAAd,KAiBA,OAJAC,qBAAU,WACNL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,MACnD,CAACwB,EAAYxB,IAER,CAACA,EAAO8B,GCxBZ,IAAMI,EACX,4aAEWC,EACX,mNC0DaC,MAxDf,WACE,MAAwBf,EAAgB,OAAQa,GAAhD,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsBjB,EAAgB,MAAOc,GAA7C,mBAAOI,EAAP,KAAYC,EAAZ,KACA,EAAoBnB,EAAgB,KAAM,IAA1C,mBAAOoB,EAAP,KAAWC,EAAX,KACA,EAA4BxC,mBAAS,IAArC,mBAAOyC,EAAP,KAAeC,EAAf,KAqBA,OAnBAb,qBAAU,WACRO,EAAQJ,GACRM,EAAOL,KACN,IAEHJ,qBAAU,WACR,IAAMc,EAAUC,YAAW,WACzBF,EAAU,iCAAD,OAECP,EAFD,mCAGEE,EAHF,qCAIGE,EAJH,wCAOR,KAEH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGb,qCACE,sBAAKpC,UAAU,gBAAf,UACE,cAAC,EAAD,CACEP,SAAS,MACTC,YAAY,OACZC,MAAOqC,EACPpC,SAAUqC,IAEZ,cAAC,EAAD,CACExC,SAAS,MACTC,YAAY,MACZC,MAAOuC,EACPtC,SAAUuC,IAEZ,cAAC,EAAD,CAAQ1C,SAAS,KAAKC,YAAY,KAAKC,MAAOyC,EAAIxC,SAAUyC,OAE9D,qBAAKrC,UAAU,OAAf,SACE,wBACEsC,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,eC3CFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2af3c032.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport {Controlled as ControlledEditor} from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Editor(props) {\r\n    const {\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange\r\n    } = props\r\n    const [open, setOpen] = useState(true)\r\n\r\n    function handleChange(editor, data, value)\r\n    {\r\n        onChange(value)\r\n    }\r\n    return (\r\n        <div className={`editor-container ${open ? '' : 'collapsed' }`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button\r\n                type=\"button\"\r\n                className=\"expand-collapse-btn\"\r\n                    onClick={()=>setOpen(prevOpen => !prevOpen)}\r\n                >\r\n                    <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n                </button>\r\n            </div>\r\n            <ControlledEditor \r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    theme: 'material',\r\n                    lineNumbers: true\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Editor;","import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'WEB-IDE-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    const prefixedKey = PREFIX + key\r\n    const [value, setValue] = useState(()=> {\r\n        const jsonValue = localStorage.getItem(prefixedKey)\r\n        if (jsonValue != null) {\r\n            return JSON.parse(jsonValue)\r\n        }\r\n\r\n        if (typeof initialValue === 'function') {\r\n            return initialValue()\r\n        } else {\r\n            return initialValue\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n    },[prefixedKey,value])\r\n\r\n    return [value, setValue]\r\n}\r\n","export const htmlStarter =\r\n  '<html>\\n  <body>\\n    <h1> Hi There üëã!!!</h1>\\n    <div class=\"container\">\\n      <p> Welcome to this web IDE. Here you can write HTML code, CSS code and Js code to create web pages efficiently. </p>\\n      <div class=\"emoji\">üë®‚Äçüíª</div>\\n      <p>You can see linting and preview features implemented to help you code better. <br></br> Refresh rate: 200ms</p>\\n  </div>\\n  </body>\\n</html>';\r\n\r\nexport const cssStarter =\r\n  \"body {\\n  font-family: sans;\\n  margin: 50px;\\n  background: lightblue;\\n}\\n.emoji {\\n  font-size:5rem;width:100%;text-align:center;\\n}\\n\\n.container {\\n  display: flex;\\n  justify-content: space-evenly;\\n}\\n\";\r\n","import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Editor from \"./components/Editor\";\r\nimport useLocalStorage from \"./hooks/useLocalStorage\";\r\nimport { htmlStarter, cssStarter } from \"./constants\";\r\n\r\nfunction App() {\r\n  const [html, setHtml] = useLocalStorage(\"html\", htmlStarter);\r\n  const [css, setCss] = useLocalStorage(\"css\", cssStarter);\r\n  const [js, setJs] = useLocalStorage(\"js\", \"\");\r\n  const [srcDoc, setSrcDoc] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setHtml(htmlStarter);\r\n    setCss(cssStarter);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setSrcDoc(`\r\n      <html>\r\n        <body>${html}</body>\r\n        <style>${css}</style>\r\n        <script>${js}</script>\r\n      </html>\r\n      `);\r\n    }, 250);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [html, css, js]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pane top-pane\">\r\n        <Editor\r\n          language=\"xml\"\r\n          displayName=\"HTML\"\r\n          value={html}\r\n          onChange={setHtml}\r\n        />\r\n        <Editor\r\n          language=\"css\"\r\n          displayName=\"CSS\"\r\n          value={css}\r\n          onChange={setCss}\r\n        />\r\n        <Editor language=\"js\" displayName=\"JS\" value={js} onChange={setJs} />\r\n      </div>\r\n      <div className=\"pane\">\r\n        <iframe\r\n          srcDoc={srcDoc}\r\n          title=\"output\"\r\n          sandbox=\"allow-scripts\"\r\n          frameBorder=\"0\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}